name: Static Analysis

on:
  workflow_call:
    inputs:
      phpVersions:
        type: string
        default: '["8.1", "8.2", "8.3"]'

      configFile:
        type: string
        default: 'phpstan.neon'

      extensions:
        type: string
        default: ''

      workingDirectory:
        type: string
        default: '.'

    secrets:
      COMPOSER_AUTH_CONFIG:
        required: false

jobs:
    phpstan:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ${{ inputs.workingDirectory }}
        strategy:
            matrix:
                php: ${{ fromJson(inputs.phpVersions) }}

            fail-fast: false

        name: "PHPStan - PHP ${{ matrix.php }}"
        steps:
            - uses: actions/checkout@v4
            - uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  coverage: none

            -
              env:
                COMPOSER_AUTH_CONFIG: ${{ secrets.COMPOSER_AUTH_CONFIG }}
              if: ${{ env.COMPOSER_AUTH_CONFIG != '' }}
              run: printenv COMPOSER_AUTH_CONFIG > ./auth.json

            - run: composer install --no-interaction --prefer-dist
            - run: mkdir -p ${{ runner.temp }}/phpstan
            - run: composer require --dev phpstan/phpstan ^2.0 -d ${{ runner.temp }}/phpstan --no-progress
            - run: composer config --no-plugins allow-plugins true -d ${{ runner.temp }}/phpstan
            - run: composer require --dev phpstan/extension-installer -d ${{ runner.temp }}/phpstan
            - if: ${{ inputs.extensions != '' }}
              run: composer require --dev ${{ inputs.extensions }} -d ${{ runner.temp }}/phpstan
            - run: ${{ runner.temp }}/phpstan/vendor/bin/phpstan analyse --no-progress --configuration ${{ inputs.configFile }}
